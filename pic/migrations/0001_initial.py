# Generated by Django 5.0.7 on 2024-07-30 13:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.CharField(max_length=10, unique=True)),
                ('job_name', models.CharField(max_length=200)),
                ('state', models.CharField(choices=[('created', 'Created'), ('active', 'Active'), ('completed', 'Completed')], max_length=100)),
                ('job_type', models.CharField(choices=[('regular', 'Regular'), ('wafer_run', 'Wafer Run')], max_length=20)),
                ('starting_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('completion_time', models.FloatField(help_text='Time in days which were spent to complete the job.')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Service',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Status',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'AccountManager'), (2, 'Customer'), (3, 'ServiceProvider')], default=1)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccountManager',
            fields=[
                ('am_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('user', models.OneToOneField(default=1, limit_choices_to={'user_type': 1}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'AccountManager',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('cus_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(default=2, limit_choices_to={'user_type': 2}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='AccountManagerCustomer',
            fields=[
                ('am_cust_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_assigned', models.DateField()),
                ('f_am_id', models.ForeignKey(db_column='F_AM_ID', on_delete=django.db.models.deletion.CASCADE, to='pic.accountmanager')),
                ('f_cus_id', models.ForeignKey(db_column='F_CUS_ID', on_delete=django.db.models.deletion.CASCADE, to='pic.customer')),
            ],
            options={
                'db_table': 'AccountManagerCustomer',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('f_cust_id', models.ForeignKey(db_column='F_cust_ID', on_delete=django.db.models.deletion.CASCADE, to='pic.customer')),
                ('f_status_id', models.ForeignKey(db_column='F_Status_ID', on_delete=django.db.models.deletion.CASCADE, to='pic.status')),
            ],
            options={
                'db_table': 'Order',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('quarter_from', models.CharField(max_length=2)),
                ('year_from', models.IntegerField()),
                ('quarter_to', models.CharField(max_length=2)),
                ('year_to', models.IntegerField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports_created', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderReportResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_orders', models.IntegerField()),
                ('total_revenue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('average_order_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pic.report')),
            ],
        ),
        migrations.CreateModel(
            name='JobReportResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_jobs', models.IntegerField()),
                ('report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pic.report')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('sp_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(default=3, limit_choices_to={'user_type': 3}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Service_Provider',
            },
        ),
        migrations.CreateModel(
            name='ServiceOrder',
            fields=[
                ('so_id', models.AutoField(primary_key=True, serialize=False)),
                ('f_amc_id', models.ForeignKey(db_column='F_AMC_ID', on_delete=django.db.models.deletion.CASCADE, to='pic.accountmanagercustomer')),
                ('f_job_id', models.ForeignKey(db_column='F_job_ID', on_delete=django.db.models.deletion.CASCADE, to='pic.job')),
                ('f_order_id', models.ForeignKey(db_column='F_Order_ID', on_delete=django.db.models.deletion.CASCADE, to='pic.order')),
                ('f_service_id', models.ForeignKey(db_column='F_service_ID', on_delete=django.db.models.deletion.CASCADE, to='pic.service')),
                ('f_sp_id', models.ForeignKey(db_column='F_SP_ID', on_delete=django.db.models.deletion.CASCADE, to='pic.serviceprovider')),
            ],
            options={
                'db_table': 'Service_Order',
            },
        ),
        migrations.AddField(
            model_name='service',
            name='f_sp_id',
            field=models.ForeignKey(db_column='F_SP_ID', on_delete=django.db.models.deletion.CASCADE, to='pic.serviceprovider'),
        ),
        migrations.CreateModel(
            name='AccountManagerService',
            fields=[
                ('ams_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_assigned', models.DateField()),
                ('f_accm_id', models.ForeignKey(db_column='F_AccM_ID', on_delete=django.db.models.deletion.CASCADE, to='pic.accountmanager')),
                ('f_servp_id', models.ForeignKey(db_column='F_ServP_ID', on_delete=django.db.models.deletion.CASCADE, to='pic.serviceprovider')),
            ],
            options={
                'db_table': 'AccountManagerService',
            },
        ),
    ]
